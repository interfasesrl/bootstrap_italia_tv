{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% apply spaceless %}
  {% set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    content['gallery_item_classes'][0],
  ] %}

  {# Caption, icon, and overlay setup. #}
  {% set _item_caption =
    content.field_show_caption[0]|render == 'True' or paragraph.getParentEntity().field_show_caption.value
    ? true
  %}
  {% set _item_icon = content.field_icon_name[0] ? content.field_icon_name[0]['#context'].value %}
  {% set _item_overlay =
    paragraph.getParentEntity().field_overlay.value or paragraph.getParentEntity().field_gallery_grid_type.value == 'double'
    ? true
  %}

  {# Call to action setup. #}
  {% set call_to_action_attributes = create_attribute() %}
  {% if content.field_call_to_action[0] %}
    {% if content.field_call_to_action[0]['#url'].external %}
      {% set call_to_action_attributes = call_to_action_attributes
        .setAttribute('target', '_blank')
        .setAttribute('title',
          content.field_call_to_action[0]['#title']|render ~ ' - ' ~ content.field_call_to_action[0]['#url_title']|render
        )
      %}
    {% else %}
      {% set call_to_action_attributes = call_to_action_attributes
        .setAttribute('title', content.field_call_to_action[0]['#title']|render)
      %}
    {% endif %}
  {% endif %}
  {% set _item_url = content.field_call_to_action[0] ? content.field_call_to_action[0]['#url']|render %}

  {% block paragraph %}
    {% embed '@bi-bcl/gallery/gallery-item.html.twig' with {
      image_description: content.field_description,
      show_image_caption: _item_caption,
      icon_name: _item_icon,
      overlay: _item_overlay,
      call_to_action_url: _item_url,
      call_to_action_attibutes: call_to_action_attributes,
      gallery_item_attributes: attributes.addClass(classes),
    } %}

      {% block galleryItemImage %}
        {{ content.field_background_image }}
        {{ content.field_image }}
      {% endblock %}

    {% endembed %}
  {% endblock paragraph %}
{% endapply %}
